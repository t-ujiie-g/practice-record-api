"""first migrate

Revision ID: b3c7d87fdae3
Revises: 
Create Date: 2024-03-03 09:45:31.349583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b3c7d87fdae3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('startTime', sa.String(), nullable=True),
    sa.Column('startMinute', sa.Integer(), nullable=True),
    sa.Column('endTime', sa.String(), nullable=True),
    sa.Column('endMinute', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_records_date'), 'records', ['date'], unique=False)
    op.create_index(op.f('ix_records_description'), 'records', ['description'], unique=False)
    op.create_index(op.f('ix_records_id'), 'records', ['id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_table('practice_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recordId', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['recordId'], ['records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_practice_details_content'), 'practice_details', ['content'], unique=False)
    op.create_index(op.f('ix_practice_details_id'), 'practice_details', ['id'], unique=False)
    op.create_table('practice_tag_association',
    sa.Column('practice_detail_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['practice_detail_id'], ['practice_details.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('practice_detail_id', 'tag_id')
    )
    # op.drop_index('idx_practice_detail_record_id', table_name='PracticeDetail')
    # op.drop_table('PracticeDetail')
    op.execute('DROP TABLE "PracticeDetail" CASCADE')
    op.drop_table('Record')
    op.execute('DROP TABLE "Tag" CASCADE')
    op.drop_table('PracticeTag')
    op.drop_table('_prisma_migrations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    op.create_table('PracticeTag',
    sa.Column('practiceDetailId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tagId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['practiceDetailId'], ['PracticeDetail.id'], name='PracticeTag_practiceDetailId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['tagId'], ['Tag.id'], name='PracticeTag_tagId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('practiceDetailId', 'tagId', name='PracticeTag_pkey')
    )
    op.create_table('Tag',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Tag_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Tag_pkey')
    )
    op.create_index('Tag_name_key', 'Tag', ['name'], unique=True)
    op.create_table('Record',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Record_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('startTime', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('startMinute', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('endTime', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('endMinute', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Record_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('PracticeDetail',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"PracticeDetail_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('recordId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['recordId'], ['Record.id'], name='PracticeDetail_recordId_fkey', onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='PracticeDetail_pkey')
    )
    op.create_index('idx_practice_detail_record_id', 'PracticeDetail', ['recordId'], unique=False)
    op.drop_table('practice_tag_association')
    op.drop_index(op.f('ix_practice_details_id'), table_name='practice_details')
    op.drop_index(op.f('ix_practice_details_content'), table_name='practice_details')
    op.drop_table('practice_details')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_records_id'), table_name='records')
    op.drop_index(op.f('ix_records_description'), table_name='records')
    op.drop_index(op.f('ix_records_date'), table_name='records')
    op.drop_table('records')
    # ### end Alembic commands ###
